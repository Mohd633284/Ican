rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Members collection rules
    match /members/{memberId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Licenses collection rules
    match /licenses/{licenseId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Branches collection rules
    match /branches/{branchId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow write: if isAdmin();
    }
  }
}